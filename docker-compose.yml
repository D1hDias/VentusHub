version: '3.8'

services:
  # Aplicação VentusHub
  ventushub:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: ventushub-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=80
      - DATABASE_URL=${DATABASE_URL}
      - SESSION_SECRET=${SESSION_SECRET}
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
    volumes:
      - ./uploads:/app/uploads:rw
      - ./logs:/app/logs:rw
    networks:
      - ventushub-network
    depends_on:
      - postgres
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    labels:
      - "com.docker.compose.service=ventushub"
      - "com.ventushub.version=1.0"

  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: ventushub-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-ventushub}
      - POSTGRES_USER=${POSTGRES_USER:-ventushub_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw
      - ./backups:/backups:rw
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - ventushub-network
    security_opt:
      - no-new-privileges:true
    command: [
      "postgres",
      "-c", "log_statement=all",
      "-c", "log_destination=stderr",
      "-c", "logging_collector=on",
      "-c", "max_connections=100",
      "-c", "shared_buffers=256MB",
      "-c", "effective_cache_size=1GB"
    ]
    labels:
      - "com.docker.compose.service=database"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ventushub-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available:/etc/nginx/sites-available:ro
      - ./ssl:/etc/ssl/certs:ro
      - ./nginx/logs:/var/log/nginx:rw
    networks:
      - ventushub-network
    depends_on:
      - ventushub
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.docker.compose.service=proxy"

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: ventushub-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data:rw
    networks:
      - ventushub-network
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.docker.compose.service=cache"

networks:
  ventushub-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-ventushub
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/ventushub/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/ventushub/redis